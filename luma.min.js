const components={},routes={};export function defineComponent(t,e){components[t]=e;class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(e.props||{})}connectedCallback(){this.render()}attributeChangedCallback(){this.render()}render(){let t=e.template;Object.keys(e.props||{}).forEach((n=>{const o=this.getAttribute(n)||e.props[n];t=t.replaceAll(`{{ ${n} }}`,o)})),this.shadowRoot.innerHTML=t,this.applyStyles()}applyStyles(){if(e.styles){const t=document.createElement("style");t.textContent=e.styles,this.shadowRoot.appendChild(t)}}}customElements.define(t,n)}export function defineRoute(t,e){routes[t]=e}export function navigateTo(t,e){e&&e.preventDefault();const n=matchRoute(t);n?(history.pushState({path:t},"",t),document.getElementById("app").innerHTML=n.component(n.params)):document.getElementById("app").innerHTML="<h1>404 - Seite nicht gefunden</h1>"}function matchRoute(t){for(const e in routes){const n=e.match(/:([^\\/]+)/);if(n){const o=new RegExp(`^${e.replace(/:[^\\/]+/,"([^\\/]+)")}$`),s=t.match(o);if(s)return{component:routes[e],params:{[n[1]]:s[1]}}}else if(e===t)return{component:routes[e]}}return null}window.addEventListener("popstate",(t=>{t.state?.path&&navigateTo(t.state.path)}));